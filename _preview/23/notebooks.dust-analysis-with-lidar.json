{"version":2,"kind":"Notebook","sha256":"0a92afd669d1d05c1132fa4635992197e0b6125cd296a8dac4f2b48fdb9daae9","slug":"notebooks.dust-analysis-with-lidar","location":"/notebooks/dust_analysis_with_lidar.ipynb","dependencies":[],"frontmatter":{"title":"Dust layer observations","content_includes_title":true,"kernelspec":{"name":"conda-base-py","display_name":"Python [conda env:base] *","language":"python"},"authors":[{"nameParsed":{"literal":"Project Pythia Community","given":"Project Pythia","family":"Community"},"name":"Project Pythia Community","url":"https://projectpythia.org/","id":"contributors-myst-generated-uid-0"}],"open_access":true,"license":{"content":{"id":"Apache-2.0","url":"https://opensource.org/licenses/Apache-2.0","name":"Apache License 2.0","free":true,"osi":true},"code":{"id":"CC-BY-4.0","url":"https://creativecommons.org/licenses/by/4.0/","name":"Creative Commons Attribution 4.0 International","free":true,"CC":true}},"github":"https://github.com/projectpythia/armss2024-sail-cookbook","copyright":"2024","numbering":{"title":{"offset":1}},"edit_url":"https://github.com/projectpythia/armss2024-sail-cookbook/blob/HEAD/notebooks/dust_analysis_with_lidar.ipynb","exports":[{"format":"ipynb","filename":"dust_analysis_with_lidar.ipynb","url":"/armss2024-sail-cookbook/build/dust_analysis_with_l-7c08eca233e6ce95ae97816e35150464.ipynb"}]},"widgets":{},"mdast":{"type":"root","children":[{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# analysis of high aerosol loading during dust event (April 3, 2024)\n# read High Spectra Resolution Lidar (HSRL) data using ACT\n\n### code courtesy of Damao Zhang ###\n\n#%matplotlib widget\nimport ipywidgets as widgets\n\nimport matplotlib.pyplot as plt\nimport ipywidgets as widgets\nimport numpy as np\nimport pandas as pd\nimport os\nfrom datetime import datetime\n\nimport act\nimport xarray as xr","key":"Je9eR6uALz"},{"type":"output","id":"OQb3yICj3x5nRvdVqn7KK","data":[],"key":"B6MoH0DWvo"}],"key":"wlqwYX8PEk"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":1,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Dust layer observations","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"n6OHReU3G9"}],"identifier":"dust-layer-observations","label":"Dust layer observations","html_id":"dust-layer-observations","implicit":true,"key":"OuYzpySvgi"}],"key":"BQqaVx3IGd"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"### April 3rd, 2022 ###\n# Set your username and token here!\nusername = 'username'\ntoken = 'token'\n\n# Set the datastream and start/enddates\n\ndatastream = 'guchsrlM1.a1'\nstartdate = '2023-04-3'\nenddate = '2023-04-3'\n\n# Use ACT to easily download the data.  Watch for the data citation!  Show some support\n# for ARM's instrument experts and cite their data if you use it in a publication\nresult = act.discovery.download_arm_data(username, token, datastream, startdate, enddate)\nresult.sort()\n\nds = act.io.read_arm_netcdf(result)\nds.clean.cleanup()\n\n# compute log of backscatter \nds['beta_a_backscatter_log'] = np.log10(ds['beta_a_backscatter'])\nds['beta_a_backscatter_log'].attrs['units'] = f\"log10({ds['beta_a_backscatter'].attrs['units']})\"\nds = ds.where(ds.range <= 10000, drop=True)\n\nmask = ds['particulate_backscatter_signal_to_noise']>=3\n\n#beta_a_backscatter - column backscatter \nvariables = ['beta_a_backscatter_log', 'linear_depol', 'color_ratio']\n\n# watch out cloudy pixels\ndisplay = act.plotting.TimeSeriesDisplay(ds.where(mask),\n                                         subplot_shape=(3,), figsize=(12,16))\ndisplay.plot(variables[0], subplot_index=(0,))\ndisplay.set_yrng([0, 6000], subplot_index=(0,))\n\n# linear_depol indicates irregular aerosol \ndisplay.plot(variables[1], subplot_index=(1,), vmin = 0, vmax = 0.3)\ndisplay.set_yrng([0, 6000], subplot_index=(0,))\n\n# color_ratio an indicator of aerosol particle size. Large aerosol particles have larger color_ratios\ndisplay.plot(variables[2], subplot_index=(2,), vmin = 0, vmax = 1)\ndisplay.set_yrng([0, 6000], subplot_index=(0,))\n\nplt.show()","key":"z0I8wOtqJv"},{"type":"output","id":"tyrEHfIZp94g_bVRohbFL","data":[{"name":"stdout","output_type":"stream","text":"[DOWNLOADING] guchsrlM1.a1.20230403.000000.nc\n\nIf you use these data to prepare a publication, please cite:\n\nHolz, R., Garcia, J., Schuman, E., Bambha, R., Ermold, B., Eloranta, E., &\nGarcia, J. High Spectral Resolution Lidar (HSRL). Atmospheric Radiation\nMeasurement (ARM) User Facility. https://doi.org/10.5439/1462207\n\n"},{"name":"stderr","output_type":"stream","text":"/opt/conda/lib/python3.11/site-packages/dask/core.py:127: RuntimeWarning: invalid value encountered in log10\n  return func(*(_execute_task(a, cache) for a in args))\n"},{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"b638a3d9f0e343894400b73239def3e8","path":"/armss2024-sail-cookbook/build/b638a3d9f0e343894400b73239def3e8.png"},"text/plain":{"content":"<Figure size 1200x1600 with 6 Axes>","content_type":"text/plain"}}}],"key":"I107kAXGQ2"}],"key":"PonHUA5c3y"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"### April 4rd, 2022 ###\n# Set your username and token here!\nusername = 'username'\ntoken = 'token'\n\n# Set the datastream and start/enddates\n\ndatastream = 'guchsrlM1.a1'\nstartdate = '2023-04-4'\nenddate = '2023-04-4'\n\n# Use ACT to easily download the data.  Watch for the data citation!  Show some support\n# for ARM's instrument experts and cite their data if you use it in a publication\nresult = act.discovery.download_arm_data(username, token, datastream, startdate, enddate)\nresult.sort()\n\nds = act.io.read_arm_netcdf(result)\nds.clean.cleanup()\n\n# compute log of backscatter \nds['beta_a_backscatter_log'] = np.log10(ds['beta_a_backscatter'])\nds['beta_a_backscatter_log'].attrs['units'] = f\"log10({ds['beta_a_backscatter'].attrs['units']})\"\nds = ds.where(ds.range <= 10000, drop=True)\n\nmask = ds['particulate_backscatter_signal_to_noise']>=3\n\n#beta_a_backscatter - column backscatter \nvariables = ['beta_a_backscatter_log', 'linear_depol', 'color_ratio']\n\n# watch out cloudy pixels\ndisplay = act.plotting.TimeSeriesDisplay(ds.where(mask),\n                                         subplot_shape=(3,), figsize=(12,16))\ndisplay.plot(variables[0], subplot_index=(0,))\ndisplay.set_yrng([0, 6000], subplot_index=(0,))\n\n# linear_depol indicates irregular aerosol \ndisplay.plot(variables[1], subplot_index=(1,), vmin = 0, vmax = 0.3)\ndisplay.set_yrng([0, 6000], subplot_index=(0,))\n\n# color_ratio an indicator of aerosol particle size. Large aerosol particles have larger color_ratios\ndisplay.plot(variables[2], subplot_index=(2,), vmin = 0, vmax = 1)\ndisplay.set_yrng([0, 6000], subplot_index=(0,))\n\nplt.show()","key":"renE0v5CJu"},{"type":"output","id":"iU3HP6CxYmN9NrwusLkUP","data":[{"name":"stdout","output_type":"stream","text":"[DOWNLOADING] guchsrlM1.a1.20230404.000000.nc\n\nIf you use these data to prepare a publication, please cite:\n\nHolz, R., Garcia, J., Schuman, E., Bambha, R., Ermold, B., Eloranta, E., &\nGarcia, J. High Spectral Resolution Lidar (HSRL). Atmospheric Radiation\nMeasurement (ARM) User Facility. https://doi.org/10.5439/1462207\n\n"},{"name":"stderr","output_type":"stream","text":"/opt/conda/lib/python3.11/site-packages/dask/core.py:127: RuntimeWarning: invalid value encountered in log10\n  return func(*(_execute_task(a, cache) for a in args))\n"},{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"fe2b608dc5a3be4f0b02d65e99bc9313","path":"/armss2024-sail-cookbook/build/fe2b608dc5a3be4f0b02d65e99bc9313.png"},"text/plain":{"content":"<Figure size 1200x1600 with 6 Axes>","content_type":"text/plain"}}}],"key":"nqmQ90cBbs"}],"key":"jvPCzVVzpM"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"### April 5rd, 2022 ###\n# Set your username and token here!\nusername = 'username'\ntoken = 'token'\n\n# Set the datastream and start/enddates\n\ndatastream = 'guchsrlM1.a1'\nstartdate = '2023-04-5'\nenddate = '2023-04-5'\n\n# Use ACT to easily download the data.  Watch for the data citation!  Show some support\n# for ARM's instrument experts and cite their data if you use it in a publication\nresult = act.discovery.download_arm_data(username, token, datastream, startdate, enddate)\nresult.sort()\n\nds = act.io.read_arm_netcdf(result)\nds.clean.cleanup()\n\n# compute log of backscatter \nds['beta_a_backscatter_log'] = np.log10(ds['beta_a_backscatter'])\nds['beta_a_backscatter_log'].attrs['units'] = f\"log10({ds['beta_a_backscatter'].attrs['units']})\"\nds = ds.where(ds.range <= 10000, drop=True)\n\nmask = ds['particulate_backscatter_signal_to_noise']>=3\n\n#beta_a_backscatter - column backscatter \nvariables = ['beta_a_backscatter_log', 'linear_depol', 'color_ratio']\n\n# watch out cloudy pixels\ndisplay = act.plotting.TimeSeriesDisplay(ds.where(mask),\n                                         subplot_shape=(3,), figsize=(12,16))\ndisplay.plot(variables[0], subplot_index=(0,))\ndisplay.set_yrng([0, 6000], subplot_index=(0,))\n\n# linear_depol indicates irregular aerosol \ndisplay.plot(variables[1], subplot_index=(1,), vmin = 0, vmax = 0.3)\ndisplay.set_yrng([0, 6000], subplot_index=(0,))\n\n# color_ratio an indicator of aerosol particle size. Large aerosol particles have larger color_ratios\ndisplay.plot(variables[2], subplot_index=(2,), vmin = 0, vmax = 1)\ndisplay.set_yrng([0, 6000], subplot_index=(0,))\n\nplt.show()","key":"gInTdP9MCq"},{"type":"output","id":"NHLqGPLNcVFKdEhwx-3SY","data":[{"name":"stdout","output_type":"stream","text":"[DOWNLOADING] guchsrlM1.a1.20230405.000000.nc\n\nIf you use these data to prepare a publication, please cite:\n\nHolz, R., Garcia, J., Schuman, E., Bambha, R., Ermold, B., Eloranta, E., &\nGarcia, J. High Spectral Resolution Lidar (HSRL). Atmospheric Radiation\nMeasurement (ARM) User Facility. https://doi.org/10.5439/1462207\n\n"},{"name":"stderr","output_type":"stream","text":"/opt/conda/lib/python3.11/site-packages/dask/core.py:127: RuntimeWarning: invalid value encountered in log10\n  return func(*(_execute_task(a, cache) for a in args))\n"},{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"9c089b432d76a264015d7eaf82ef3b1e","path":"/armss2024-sail-cookbook/build/9c089b432d76a264015d7eaf82ef3b1e.png"},"text/plain":{"content":"<Figure size 1200x1600 with 6 Axes>","content_type":"text/plain"}}}],"key":"drDVvfia7t"}],"key":"YEaI0uHoj1"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"### April 6rd, 2022 ###\n# Set your username and token here!\nusername = 'username'\ntoken = 'token'\n\n# Set the datastream and start/enddates\n\ndatastream = 'guchsrlM1.a1'\nstartdate = '2023-04-6'\nenddate = '2023-04-6'\n\n# Use ACT to easily download the data.  Watch for the data citation!  Show some support\n# for ARM's instrument experts and cite their data if you use it in a publication\nresult = act.discovery.download_arm_data(username, token, datastream, startdate, enddate)\nresult.sort()\n\nds = act.io.read_arm_netcdf(result)\nds.clean.cleanup()\n\n# compute log of backscatter \nds['beta_a_backscatter_log'] = np.log10(ds['beta_a_backscatter'])\nds['beta_a_backscatter_log'].attrs['units'] = f\"log10({ds['beta_a_backscatter'].attrs['units']})\"\nds = ds.where(ds.range <= 10000, drop=True)\n\nmask = ds['particulate_backscatter_signal_to_noise']>=3\n\n#beta_a_backscatter - column backscatter \nvariables = ['beta_a_backscatter_log', 'linear_depol', 'color_ratio']\n\n# watch out cloudy pixels\ndisplay = act.plotting.TimeSeriesDisplay(ds.where(mask),\n                                         subplot_shape=(3,), figsize=(12,16))\ndisplay.plot(variables[0], subplot_index=(0,))\ndisplay.set_yrng([0, 6000], subplot_index=(0,))\n\n# linear_depol indicates irregular aerosol \ndisplay.plot(variables[1], subplot_index=(1,), vmin = 0, vmax = 0.3)\ndisplay.set_yrng([0, 6000], subplot_index=(0,))\n\n# color_ratio an indicator of aerosol particle size. Large aerosol particles have larger color_ratios\ndisplay.plot(variables[2], subplot_index=(2,), vmin = 0, vmax = 1)\ndisplay.set_yrng([0, 6000], subplot_index=(0,))\n\nplt.show()","key":"KOPUGVyMPQ"},{"type":"output","id":"6WEKZT8GAir4wVlNbrQQR","data":[{"name":"stdout","output_type":"stream","text":"[DOWNLOADING] guchsrlM1.a1.20230406.000000.nc\n\nIf you use these data to prepare a publication, please cite:\n\nHolz, R., Garcia, J., Schuman, E., Bambha, R., Ermold, B., Eloranta, E., &\nGarcia, J. High Spectral Resolution Lidar (HSRL). Atmospheric Radiation\nMeasurement (ARM) User Facility. https://doi.org/10.5439/1462207\n\n"},{"name":"stderr","output_type":"stream","text":"/opt/conda/lib/python3.11/site-packages/dask/core.py:127: RuntimeWarning: invalid value encountered in log10\n  return func(*(_execute_task(a, cache) for a in args))\n"},{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"b38e3b01ad7eabd8367e0f6d914c0ea1","path":"/armss2024-sail-cookbook/build/b38e3b01ad7eabd8367e0f6d914c0ea1.png"},"text/plain":{"content":"<Figure size 1200x1600 with 6 Axes>","content_type":"text/plain"}}}],"key":"U71WPsVVL8"}],"key":"dEFXNd5CjV"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"### April 7th, 2022 ###\n# Set your username and token here!\nusername = 'username'\ntoken = 'token'\n\n# Set the datastream and start/enddates\n\ndatastream = 'guchsrlM1.a1'\nstartdate = '2023-04-7'\nenddate = '2023-04-7'\n\n# Use ACT to easily download the data.  Watch for the data citation!  Show some support\n# for ARM's instrument experts and cite their data if you use it in a publication\nresult = act.discovery.download_arm_data(username, token, datastream, startdate, enddate)\nresult.sort()\n\nds = act.io.read_arm_netcdf(result)\nds.clean.cleanup()\n\n# compute log of backscatter \nds['beta_a_backscatter_log'] = np.log10(ds['beta_a_backscatter'])\nds['beta_a_backscatter_log'].attrs['units'] = f\"log10({ds['beta_a_backscatter'].attrs['units']})\"\nds = ds.where(ds.range <= 10000, drop=True)\n\nmask = ds['particulate_backscatter_signal_to_noise']>=3\n\n#beta_a_backscatter - column backscatter \nvariables = ['beta_a_backscatter_log', 'linear_depol', 'color_ratio']\n\n# watch out cloudy pixels\ndisplay = act.plotting.TimeSeriesDisplay(ds.where(mask),\n                                         subplot_shape=(3,), figsize=(12,16))\ndisplay.plot(variables[0], subplot_index=(0,))\ndisplay.set_yrng([0, 6000], subplot_index=(0,))\n\n# linear_depol indicates irregular aerosol \ndisplay.plot(variables[1], subplot_index=(1,), vmin = 0, vmax = 0.3)\ndisplay.set_yrng([0, 6000], subplot_index=(0,))\n\n# color_ratio an indicator of aerosol particle size. Large aerosol particles have larger color_ratios\ndisplay.plot(variables[2], subplot_index=(2,), vmin = 0, vmax = 1)\ndisplay.set_yrng([0, 6000], subplot_index=(0,))\n\nplt.show()","key":"dEb3YQw6Pf"},{"type":"output","id":"F4jW2U1eZBhdY-nGhzYEY","data":[{"name":"stdout","output_type":"stream","text":"[DOWNLOADING] guchsrlM1.a1.20230407.000000.nc\n\nIf you use these data to prepare a publication, please cite:\n\nHolz, R., Garcia, J., Schuman, E., Bambha, R., Ermold, B., Eloranta, E., &\nGarcia, J. High Spectral Resolution Lidar (HSRL). Atmospheric Radiation\nMeasurement (ARM) User Facility. https://doi.org/10.5439/1462207\n\n"},{"name":"stderr","output_type":"stream","text":"/opt/conda/lib/python3.11/site-packages/dask/core.py:127: RuntimeWarning: invalid value encountered in log10\n  return func(*(_execute_task(a, cache) for a in args))\n"},{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"457b6e41ee089016e8e164fc3e1e1e16","path":"/armss2024-sail-cookbook/build/457b6e41ee089016e8e164fc3e1e1e16.png"},"text/plain":{"content":"<Figure size 1200x1600 with 6 Axes>","content_type":"text/plain"}}}],"key":"oqkS2e4TCK"}],"key":"xS60ohzeIs"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"### April 8th, 2022 ###\n# Set your username and token here!\nusername = 'username'\ntoken = 'token'\n\n# Set the datastream and start/enddates\n\ndatastream = 'guchsrlM1.a1'\nstartdate = '2023-04-8'\nenddate = '2023-04-8'\n\n# Use ACT to easily download the data.  Watch for the data citation!  Show some support\n# for ARM's instrument experts and cite their data if you use it in a publication\nresult = act.discovery.download_arm_data(username, token, datastream, startdate, enddate)\nresult.sort()\n\nds = act.io.read_arm_netcdf(result)\nds.clean.cleanup()\n\n# compute log of backscatter \nds['beta_a_backscatter_log'] = np.log10(ds['beta_a_backscatter'])\nds['beta_a_backscatter_log'].attrs['units'] = f\"log10({ds['beta_a_backscatter'].attrs['units']})\"\nds = ds.where(ds.range <= 10000, drop=True)\n\nmask = ds['particulate_backscatter_signal_to_noise']>=3\n\n#beta_a_backscatter - column backscatter \nvariables = ['beta_a_backscatter_log', 'linear_depol', 'color_ratio']\n\n# watch out cloudy pixels\ndisplay = act.plotting.TimeSeriesDisplay(ds.where(mask),\n                                         subplot_shape=(3,), figsize=(12,16))\ndisplay.plot(variables[0], subplot_index=(0,))\ndisplay.set_yrng([0, 6000], subplot_index=(0,))\n\n# linear_depol indicates irregular aerosol \ndisplay.plot(variables[1], subplot_index=(1,), vmin = 0, vmax = 0.3)\ndisplay.set_yrng([0, 6000], subplot_index=(0,))\n\n# color_ratio an indicator of aerosol particle size. Large aerosol particles have larger color_ratios\ndisplay.plot(variables[2], subplot_index=(2,), vmin = 0, vmax = 1)\ndisplay.set_yrng([0, 6000], subplot_index=(0,))\n\nplt.show()","key":"PJr10DGGqb"},{"type":"output","id":"Fygq3ShN95TyxnIBsapYn","data":[{"name":"stdout","output_type":"stream","text":"[DOWNLOADING] guchsrlM1.a1.20230408.000000.nc\n\nIf you use these data to prepare a publication, please cite:\n\nHolz, R., Garcia, J., Schuman, E., Bambha, R., Ermold, B., Eloranta, E., &\nGarcia, J. High Spectral Resolution Lidar (HSRL). Atmospheric Radiation\nMeasurement (ARM) User Facility. https://doi.org/10.5439/1462207\n\n"},{"name":"stderr","output_type":"stream","text":"/opt/conda/lib/python3.11/site-packages/dask/core.py:127: RuntimeWarning: invalid value encountered in log10\n  return func(*(_execute_task(a, cache) for a in args))\n"},{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"07b738defe6c90f8bf25303c4cc169c6","path":"/armss2024-sail-cookbook/build/07b738defe6c90f8bf25303c4cc169c6.png"},"text/plain":{"content":"<Figure size 1200x1600 with 6 Axes>","content_type":"text/plain"}}}],"key":"rnwc49RUSO"}],"key":"gdBffkgA8i"}],"key":"S31QcomgXG"},"references":{"cite":{"order":[],"data":{}}},"footer":{"navigation":{"prev":{"title":"Source determination through NOAA HYSPLIT trajectory model","url":"/notebooks/hysplit-joy","group":"Identify high-aerosol loading events"},"next":{"title":"Aeorosl Optical Properties from the SAIL Campaign","url":"/notebooks/aop-spa2","group":"Analyze associated environmental conditions"}}},"domain":"http://localhost:3000"}