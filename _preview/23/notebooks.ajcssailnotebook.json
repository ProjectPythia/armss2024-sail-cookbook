{"version":2,"kind":"Notebook","sha256":"39b8afc6a7bca3dbc660742444b6d7952b0a6f10edbcce8601d53aa095579b6f","slug":"notebooks.ajcssailnotebook","location":"/notebooks/AJCSsailnotebook.ipynb","dependencies":[],"frontmatter":{"title":"SP2 Plots For SAIL events","content_includes_title":false,"kernelspec":{"name":"python3","display_name":"Python 3 (ipykernel)","language":"python"},"authors":[{"nameParsed":{"literal":"Project Pythia Community","given":"Project Pythia","family":"Community"},"name":"Project Pythia Community","url":"https://projectpythia.org/","id":"contributors-myst-generated-uid-0"}],"open_access":true,"license":{"content":{"id":"Apache-2.0","url":"https://opensource.org/licenses/Apache-2.0","name":"Apache License 2.0","free":true,"osi":true},"code":{"id":"CC-BY-4.0","url":"https://creativecommons.org/licenses/by/4.0/","name":"Creative Commons Attribution 4.0 International","free":true,"CC":true}},"github":"https://github.com/projectpythia/armss2024-sail-cookbook","copyright":"2024","numbering":{"title":{"offset":1}},"edit_url":"https://github.com/projectpythia/armss2024-sail-cookbook/blob/HEAD/notebooks/AJCSsailnotebook.ipynb","exports":[{"format":"ipynb","filename":"AJCSsailnotebook.ipynb","url":"/armss2024-sail-cookbook/_preview/23/build/AJCSsailnotebook-c1116b35ba0932972c3369fd2c5bbb23.ipynb"}]},"widgets":{},"mdast":{"type":"root","children":[{"type":"block","kind":"notebook-content","children":[{"type":"thematicBreak","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"p9sqxujLki"}],"key":"qIGWYgrVnW"},{"type":"block","kind":"notebook-content","data":{"jp-MarkdownHeadingCollapsed":true},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Overview","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"gw6TdiiIGH"}],"identifier":"overview","label":"Overview","html_id":"overview","implicit":true,"key":"SMbUpOEt1A"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"This notebook will introduce the basics of gridded, labeled data with Xarray. Since Xarray introduces additional abstractions on top of plain arrays of data, our goal is to show why these abstractions are useful and how they frequently lead to simpler, more robust code.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"aZSX0b0mAD"}],"key":"r3nzY5VlvR"},{"type":"paragraph","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Weâ€™ll cover these topics:","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"HJ94gN2cJC"}],"key":"NrmYYwGpMl"},{"type":"list","ordered":true,"start":1,"spread":false,"position":{"start":{"line":7,"column":1},"end":{"line":13,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Create a ","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"T5inEyrA6i"},{"type":"inlineCode","value":"DataArray","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"ICKeKQ9ajs"},{"type":"text","value":", one of the core object types in Xarray","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"OR4skYNk68"}],"key":"SV0vI1NDhS"},{"type":"listItem","spread":true,"position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"Understand how to use named coordinates and metadata in a ","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"XjnOGujaop"},{"type":"inlineCode","value":"DataArray","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"A007cTOzOv"}],"key":"sE03kAjekk"},{"type":"listItem","spread":true,"position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"Combine individual ","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"lHYyWYkmW3"},{"type":"inlineCode","value":"DataArrays","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"d3lDfcbTjw"},{"type":"text","value":" into a ","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"LSynPsC6jo"},{"type":"inlineCode","value":"Dataset","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"rLy3wfj7jx"},{"type":"text","value":", the other core object type in Xarray","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"KrY7K4M1J1"}],"key":"DiJY4xA3Al"},{"type":"listItem","spread":true,"position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"text","value":"Subset, slice, and interpolate the data using named coordinates","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"xPw9pt2Bkh"}],"key":"liNSSqRsc7"},{"type":"listItem","spread":true,"position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"children":[{"type":"text","value":"Open netCDF data using XArray","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"lO3QSR9Vis"}],"key":"hOIPFq53j4"},{"type":"listItem","spread":true,"position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"children":[{"type":"text","value":"Basic subsetting and aggregation of a ","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"key":"F6Oi1t080q"},{"type":"inlineCode","value":"Dataset","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"key":"saLmht2Hos"}],"key":"dTlOoL6yzH"},{"type":"listItem","spread":true,"position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"children":[{"type":"text","value":"Brief introduction to plotting with Xarray","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"key":"HiGIOUoTtJ"}],"key":"SYshIeBpce"}],"key":"gOnC46vG3I"}],"key":"gP2Z4c3Dx8"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Prerequisites","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"b989ztg3Lv"}],"identifier":"prerequisites","label":"Prerequisites","html_id":"prerequisites","implicit":true,"key":"RGYWW6d0Zn"},{"type":"table","position":{"start":{"line":3,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"tableRow","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"tableCell","header":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Concepts","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"Kaf8Lnbp2z"}],"key":"PhTdcN4oQ6"},{"type":"tableCell","header":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Importance","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"gBAbsmK72v"}],"key":"aOXn0nzUq8"},{"type":"tableCell","header":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Notes","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"XsDaRQGduG"}],"key":"ai1uZxE986"}],"key":"rL9D5bgfBh"},{"type":"tableRow","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"link","url":"https://foundations.projectpythia.org/core/numpy/numpy-basics.html","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"NumPy Basics","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"ppHNt8iFv8"}],"urlSource":"https://foundations.projectpythia.org/core/numpy/numpy-basics.html","key":"EC7nz0wV4v"}],"key":"bDMACasxZw"},{"type":"tableCell","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Necessary","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"ul9jP2Vr7T"}],"key":"qyjEtRUNi8"},{"type":"tableCell","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[],"key":"mIBJUevu84"}],"key":"ErNELdU0so"},{"type":"tableRow","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"link","url":"https://foundations.projectpythia.org/core/numpy/intermediate-numpy.html","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"Intermediate NumPy","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"ESdNmDc9pr"}],"urlSource":"https://foundations.projectpythia.org/core/numpy/intermediate-numpy.html","key":"SvZSTnBfQ5"}],"key":"YETaB0AcHV"},{"type":"tableCell","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"Helpful","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"pxxd3Tr69a"}],"key":"ZxS69gRxN1"},{"type":"tableCell","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"Familiarity with indexing and slicing arrays","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"UHExPflbAa"}],"key":"chtdGvdxNO"}],"key":"teIzOgGdOS"},{"type":"tableRow","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"link","url":"https://foundations.projectpythia.org/core/numpy/numpy-broadcasting.html","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"NumPy Broadcasting","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"JVjX2tEyZ3"}],"urlSource":"https://foundations.projectpythia.org/core/numpy/numpy-broadcasting.html","key":"N7aY8Fz5KM"}],"key":"FC1gSXo34B"},{"type":"tableCell","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Helpful","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"UvLXz4TnPG"}],"key":"tCgFrov2vl"},{"type":"tableCell","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Familiar with array arithmetic and broadcasting","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"aOFDgIli1W"}],"key":"w0W8if6QXn"}],"key":"fhT9XTxjuW"},{"type":"tableRow","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"link","url":"https://foundations.projectpythia.org/core/pandas/pandas","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"Introduction to Pandas","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"OnTZKbroLZ"}],"urlSource":"https://foundations.projectpythia.org/core/pandas/pandas","key":"izcsYWgoza"}],"key":"sghtYUp5Fg"},{"type":"tableCell","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"Helpful","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"QVAN3OvwHY"}],"key":"UHbzvvvNgr"},{"type":"tableCell","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"Familiarity with labeled data","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"BqvoIb2Kd9"}],"key":"DJH2Zf8K0e"}],"key":"YU7jKTbJwA"},{"type":"tableRow","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"link","url":"https://foundations.projectpythia.org/core/datetime/datetime","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"Datetime","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"wFFzzm0bnv"}],"urlSource":"https://foundations.projectpythia.org/core/datetime/datetime","key":"CVLNJrIIID"}],"key":"DpMGVNTMel"},{"type":"tableCell","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"Helpful","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"ZFBzOmOxwg"}],"key":"pSDFMFd2uF"},{"type":"tableCell","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"Familiarity with time formats and the ","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"DxUGi1BFW2"},{"type":"inlineCode","value":"timedelta","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"aS0WEWWdzC"},{"type":"text","value":" object","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"C0IZZkmPFZ"}],"key":"OwksKOhwsZ"}],"key":"DUux5NVPBp"},{"type":"tableRow","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"link","url":"https://foundations.projectpythia.org/core/data-formats/netcdf-cf.html","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"text","value":"Understanding of NetCDF","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"HmfwLGyo3k"}],"urlSource":"https://foundations.projectpythia.org/core/data-formats/netcdf-cf.html","key":"byDPzELh5s"}],"key":"mZpxPTy0sQ"},{"type":"tableCell","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"text","value":"Helpful","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"CM2w2ow1p2"}],"key":"NuZ2lWiV8K"},{"type":"tableCell","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"text","value":"Familiarity with metadata structure","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"IUegZoKYhJ"}],"key":"wCfP4H4HQa"}],"key":"sjEz7TqJAH"}],"key":"LEpz3COQYg"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"children":[{"type":"strong","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"children":[{"type":"text","value":"Time to learn","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"key":"kufNUirnzK"}],"key":"h35n3aa8mI"},{"type":"text","value":": 30 minutes","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"key":"hw8EC54CxD"}],"key":"El8De2K9NV"}],"key":"DeRdTDVXZj"}],"key":"NyT0jQdwEU"},{"type":"block","kind":"notebook-content","children":[{"type":"thematicBreak","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"AJ9Ng4NkxA"}],"key":"N2rN82vzPy"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Imports","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"u2bH0TaY6I"}],"identifier":"imports","label":"Imports","html_id":"imports","implicit":true,"key":"MEvjyeTVSm"}],"key":"tXLU39NYqq"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Simmilar to ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"hJ1U7G7SCN"},{"type":"inlineCode","value":"numpy","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"cCQpXjrdDk"},{"type":"text","value":", ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"ebWtH1A8MO"},{"type":"inlineCode","value":"np","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Rm2W6OSXD5"},{"type":"text","value":"; ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"FE345cNfAn"},{"type":"inlineCode","value":"pandas","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"AHcgrHiawi"},{"type":"text","value":", ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"LHAWYvODd2"},{"type":"inlineCode","value":"pd","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"w9dL5423SB"},{"type":"text","value":"; you may often encounter ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"xFvuiCkQFG"},{"type":"inlineCode","value":"xarray","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"DJkYn8vCVK"},{"type":"text","value":" imported within a shortened namespace as ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Z9a5Qt6wKF"},{"type":"inlineCode","value":"xr","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"isYZWSSwxI"},{"type":"text","value":".","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"zSYYBSyXKS"}],"key":"o9KgOEWrmj"}],"key":"WwkHLrO2qy"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"import act\nimport numpy as np\nimport xarray as xr\nimport matplotlib.pyplot as plt","key":"s4nqLblLeB"},{"type":"output","id":"KIUU_NO4AXWoIoehXdrnp","data":[{"output_type":"error","traceback":"\u001b[31m---------------------------------------------------------------------------\u001b[39m\n\u001b[31mModuleNotFoundError\u001b[39m                       Traceback (most recent call last)\n\u001b[36mCell\u001b[39m\u001b[36m \u001b[39m\u001b[32mIn[1]\u001b[39m\u001b[32m, line 1\u001b[39m\n\u001b[32m----> \u001b[39m\u001b[32m1\u001b[39m \u001b[38;5;28;01mimport\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[34;01mact\u001b[39;00m\n\u001b[32m      2\u001b[39m \u001b[38;5;28;01mimport\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[34;01mnumpy\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[38;5;28;01mas\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[34;01mnp\u001b[39;00m\n\u001b[32m      3\u001b[39m \u001b[38;5;28;01mimport\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[34;01mxarray\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[38;5;28;01mas\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[34;01mxr\u001b[39;00m\n\n\u001b[31mModuleNotFoundError\u001b[39m: No module named 'act'","ename":"ModuleNotFoundError","evalue":"No module named 'act'"}],"key":"TJ8VoXLSn2"}],"key":"XqjYJrfkZ8"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Introducing the ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"xMuhurS3K3"},{"type":"inlineCode","value":"DataArray","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"eez6kJDDcY"},{"type":"text","value":" and ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"JNzqOaHiRV"},{"type":"inlineCode","value":"Dataset","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"a5VSpEcSCF"}],"identifier":"introducing-the-dataarray-and-dataset","label":"Introducing the DataArray and Dataset","html_id":"introducing-the-dataarray-and-dataset","implicit":true,"key":"VCZ9IVx7X1"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Xarray expands on the capabilities on NumPy arrays, providing a lot of streamlined data manipulation. It is similar in that respect to Pandas, but whereas Pandas excels at working with tabular data, Xarray is focused on N-dimensional arrays of data (i.e. grids). Its interface is based largely on the netCDF data model (variables, attributes, and dimensions), but it goes beyond the traditional netCDF interfaces to provide functionality similar to netCDF-javaâ€™s ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"DRmakOxXRs"},{"type":"link","url":"https://docs.unidata.ucar.edu/netcdf-java/current/userguide/common_data_model_overview.html","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Common Data Model (CDM)","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"yJD52zdiON"}],"urlSource":"https://docs.unidata.ucar.edu/netcdf-java/current/userguide/common_data_model_overview.html","key":"vg5S3OZGFP"},{"type":"text","value":".","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"l4cWPeQ2wr"}],"key":"Ov5aN5sLe7"}],"key":"VCyhLERMTk"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"For event #1 Jan2-7 2022","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"a2edK8wmgY"}],"identifier":"for-event-1-jan2-7-2022","label":"For event #1 Jan2-7 2022","html_id":"for-event-1-jan2-7-2022","implicit":true,"key":"Y8CtT8qkAV"}],"key":"uS9jB0MIUo"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"###For Event #3","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"FYi1f1Yr2S"}],"key":"K5fhYpz1ck"}],"key":"t3UmxiBrnF"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Set your username and token here!\nusername = 'adriancortessantos'\ntoken = '<https://adc.arm.gov/armlive/livedata/home>`_.'\n\n# Set the datastream and start/enddates\ndatastream = 'gucaossp2bc60sS2.b1'\nstartdate = '2022-01-02'\nenddate = '2022-01-08'\n\n# Use ACT to easily download the data.  Watch for the data citation!  Show some support\n# for ARM's instrument experts and cite their data if you use it in a publication\nresult = act.discovery.download_arm_data(username, token, datastream, startdate, enddate)\nds_sp2 = act.io.read_arm_netcdf(result)","key":"eor1QDSRTC"},{"type":"output","id":"i9auYpGO5RTracLmUSKGY","data":[],"key":"baH7hA4fMi"}],"key":"KFhasyVVrH"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"print(ds_sp2)","key":"GWu1dxsEJJ"},{"type":"output","id":"h8U0ZbR6pOFcMsWsNw22W","data":[],"key":"X4qR17ZLnH"}],"key":"bLAOkbf5Fl"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Plot rBc Concentration with xarray","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"wDjIQQoF4D"}],"key":"v4y6O3Iqpg"}],"key":"ky1QC3EuJJ"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"import xarray as xr\nimport matplotlib.pyplot as plt\n\n\n# Assuming you have already loaded your dataset as sp2_ds\n# Plot the sp2_rbc_conc over time\nds_sp2['sp2_rbc_conc'].plot()\nplt.title('SP2 RBC Concentration Over Time')\nplt.xlabel('Date')\nplt.ylabel('ng/m^3')\nplt.show()\n","key":"y68S5KQiBO"},{"type":"output","id":"aqkYCUZ9ERHryl-0bDleL","data":[],"key":"WQi8imJYzQ"}],"key":"H7X9sz10Af"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Apply Date-night highlight","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"axrM0EqLXi"}],"key":"K2IkUq60Kr"}],"key":"pWn8SUY72b"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"import xarray as xr\nimport matplotlib.pyplot as plt\n\n# Assuming you have already loaded your dataset as sp2_ds\n# Plot the sp2_rbc_conc over time\nfig, ax = plt.subplots()\nds_sp2['sp2_rbc_conc'].plot(ax=ax)\nax.set_title('SP2 RBC Concentration Over Time')\nax.set_xlabel('Date')\nax.set_ylabel('ng/m^3')\n\n# Define day and night periods (assuming 6 AM to 6 PM as day)\nday_start = 6   # 6 AM\nday_end = 18    # 6 PM\n\n# Shade periods for each day in the dataset\ndate_range = pd.date_range(ds_sp2['time'].min().values, ds_sp2['time'].max().values, freq='D')\n\nfor date in date_range:\n    # Night period before day start\n    ax.axvspan(date, date + pd.Timedelta(hours=day_start), color='grey', alpha=0.3)\n    # Day period\n    ax.axvspan(date + pd.Timedelta(hours=day_start), date + pd.Timedelta(hours=day_end), color='yellow', alpha=0.3)\n    # Night period after day end\n    ax.axvspan(date + pd.Timedelta(hours=day_end), date + pd.Timedelta(hours=24), color='grey', alpha=0.3)\n\nplt.show()","key":"UCqQ9UI0su"},{"type":"output","id":"qakIS0XB4Oz_VrYo5ruZ-","data":[],"key":"lLGWp8yTOI"}],"key":"dZy74pDe5Z"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"import xarray as xr\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Assuming 'ds_sp2' is already loaded and 'sp2_cnts' is computed\nsp2_cnts = ds_sp2['sp2_cnts'].compute()\n\n# Convert 'time' to a regular NumPy array of datetime objects for compatibility\ntimes = ds_sp2['time'].values\nbins = ds_sp2['bin'].values\n\n# Filter bins and sp2_cnts for bins <= 0.6 micrometers\nmask = bins <= 0.5\nfiltered_bins = bins[mask]\nfiltered_sp2_cnts = sp2_cnts[:, mask]\n\n# Create the plot\nfig, ax = plt.subplots(figsize=(15, 7))\n# Use meshgrid to create 2D grid coordinates for times and filtered bins, necessary for pcolormesh\nT, B = np.meshgrid(times, filtered_bins)\n# Plot with specified color scale range\nc = ax.pcolormesh(T, B, filtered_sp2_cnts.T, shading='auto', vmin=0, vmax=40)  # Set color scale limits here\n\n# Adding a colorbar to represent the concentration scales\ncbar = plt.colorbar(c, ax=ax)\ncbar.set_label('SP2 Counts')\n\n# Customization of the plot\nax.set_title('SP2 Counts Over Time by Size Bin from January 2-7, 2022')\nax.set_xlabel('Time')\nax.set_ylabel('Size Bin (Î¼m)')\n\n# Format x-axis to handle datetime objects nicely\nplt.gcf().autofmt_xdate()  # Auto format date labels\n\nplt.show()","key":"xFm1m9cXNv"},{"type":"output","id":"o_CzrXYNVqG_xh1D_NoNJ","data":[],"key":"dXtkbeK9X8"}],"key":"MESLDR8pDt"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"For Event 2 Jan 20-30","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"PB50zKLnUS"}],"identifier":"for-event-2-jan-20-30","label":"For Event 2 Jan 20-30","html_id":"for-event-2-jan-20-30","implicit":true,"key":"t7X5aCzquW"}],"key":"MPkUYYm4ae"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Set your username and token here!\nusername = 'adriancortessantos'\ntoken = '<https://adc.arm.gov/armlive/livedata/home>`_.'\n\n# Set the datastream and start/enddates\ndatastream = 'gucaossp2bc60sS2.b1'\nstartdate = '2022-01-20'\nenddate = '2022-01-30'\n\n# Use ACT to easily download the data.  Watch for the data citation!  Show some support\n# for ARM's instrument experts and cite their data if you use it in a publication\nresult = act.discovery.download_arm_data(username, token, datastream, startdate, enddate)\nds_sp2 = act.io.read_arm_netcdf(result)","key":"kDGTjDF3WI"},{"type":"output","id":"ybulsgEuh9HM4-pdb1NI7","data":[],"key":"MGnSN3P9kh"}],"key":"RYIMhEVDSH"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"import xarray as xr\nimport matplotlib.pyplot as plt\n\n# Assuming you have already loaded your dataset as sp2_ds\n# Plot the sp2_rbc_conc over time\nfig, ax = plt.subplots()\nds_sp2['sp2_rbc_conc'].plot(ax=ax)\nax.set_title('SP2 RBC Concentration Over Time')\nax.set_xlabel('Date')\nax.set_ylabel('ng/m^3')\n\n# Define day and night periods (assuming 6 AM to 6 PM as day)\nday_start = 6   # 6 AM\nday_end = 18    # 6 PM\n\n# Shade periods for each day in the dataset\ndate_range = pd.date_range(ds_sp2['time'].min().values, ds_sp2['time'].max().values, freq='D')\n\nfor date in date_range:\n    # Night period before day start\n    ax.axvspan(date, date + pd.Timedelta(hours=day_start), color='grey', alpha=0.3)\n    # Day period\n    ax.axvspan(date + pd.Timedelta(hours=day_start), date + pd.Timedelta(hours=day_end), color='yellow', alpha=0.3)\n    # Night period after day end\n    ax.axvspan(date + pd.Timedelta(hours=day_end), date + pd.Timedelta(hours=24), color='grey', alpha=0.3)\n\nplt.show()","key":"Ohx5JN6mB8"},{"type":"output","id":"Tklkl4kHuBeiKmdeGad2J","data":[],"key":"NvqEuGTzrg"}],"key":"UIE50l3X0X"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"import xarray as xr\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Assuming 'ds_sp2' is already loaded and 'sp2_cnts' is computed\nsp2_cnts = ds_sp2['sp2_cnts'].compute()\n\n# Convert 'time' to a regular NumPy array of datetime objects for compatibility\ntimes = ds_sp2['time'].values\nbins = ds_sp2['bin'].values\n\n# Filter bins and sp2_cnts for bins <= 0.6 micrometers\nmask = bins <= 0.5\nfiltered_bins = bins[mask]\nfiltered_sp2_cnts = sp2_cnts[:, mask]\n\n# Create the plot\nfig, ax = plt.subplots(figsize=(15, 7))\n# Use meshgrid to create 2D grid coordinates for times and filtered bins, necessary for pcolormesh\nT, B = np.meshgrid(times, filtered_bins)\n# Plot with specified color scale range\nc = ax.pcolormesh(T, B, filtered_sp2_cnts.T, shading='auto', vmin=0, vmax=40)  # Set color scale limits here\n\n# Adding a colorbar to represent the concentration scales\ncbar = plt.colorbar(c, ax=ax)\ncbar.set_label('SP2 Counts')\n\n# Customization of the plot\nax.set_title('SP2 Counts Over Time by Size Bin from January 20-30, 2022')\nax.set_xlabel('Time')\nax.set_ylabel('Size Bin (Î¼m)')\n\n# Format x-axis to handle datetime objects nicely\nplt.gcf().autofmt_xdate()  # Auto format date labels\n\nplt.show()","key":"JvmqjpSYn1"},{"type":"output","id":"EDWvWasaNvDxWp69RJ5eK","data":[],"key":"bMRZZbKUM3"}],"key":"XRdC7klRI3"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"For event 3  Apr3-8 2022","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"vWnsIAyoWW"}],"identifier":"for-event-3-apr3-8-2022","label":"For event 3  Apr3-8 2022","html_id":"for-event-3-apr3-8-2022","implicit":true,"key":"t5KdDCyVb7"}],"key":"AXdc3GJ3Dq"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Set your username and token here!\nusername = 'adriancortessantos'\ntoken = '<https://adc.arm.gov/armlive/livedata/home>`_.'\n\n# Set the datastream and start/enddates\ndatastream = 'gucaossp2bc60sS2.b1'\nstartdate = '2022-04-03'\nenddate = '2022-04-08'\n\n\n# Use ACT to easily download the data.  Watch for the data citation!  Show some support\n# for ARM's instrument experts and cite their data if you use it in a publication\nresult = act.discovery.download_arm_data(username, token, datastream, startdate, enddate)\nds_sp2 = act.io.read_arm_netcdf(result)","key":"pNArmcjxij"},{"type":"output","id":"0P9hV4CJy8OVTEHDIK9LI","data":[],"key":"x0k5biZB2c"}],"key":"phKgVZxn3i"},{"type":"block","kind":"notebook-code","data":{"scrolled":true},"children":[{"type":"code","lang":"python","executable":true,"value":"import xarray as xr\nimport matplotlib.pyplot as plt\n\n# Assuming you have already loaded your dataset as sp2_ds\n# Plot the sp2_rbc_conc over time\nfig, ax = plt.subplots()\nds_sp2['sp2_rbc_conc'].plot(ax=ax)\nax.set_title('SP2 RBC Concentration Over Time')\nax.set_xlabel('Date')\nax.set_ylabel('ng/m^3')\n\n# Define day and night periods (assuming 6 AM to 6 PM as day)\nday_start = 6   # 6 AM\nday_end = 18    # 6 PM\n\n# Shade periods for each day in the dataset\ndate_range = pd.date_range(ds_sp2['time'].min().values, ds_sp2['time'].max().values, freq='D')\n\nfor date in date_range:\n    # Night period before day start\n    ax.axvspan(date, date + pd.Timedelta(hours=day_start), color='grey', alpha=0.3)\n    # Day period\n    ax.axvspan(date + pd.Timedelta(hours=day_start), date + pd.Timedelta(hours=day_end), color='yellow', alpha=0.3)\n    # Night period after day end\n    ax.axvspan(date + pd.Timedelta(hours=day_end), date + pd.Timedelta(hours=24), color='grey', alpha=0.3)\n\nplt.show()","key":"hv3KD0nsPt"},{"type":"output","id":"YL28ppefkh2q6mgas8Nzg","data":[],"key":"FotfW9bM2Q"}],"key":"rWV9DcH74D"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"import xarray as xr\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Assuming 'ds_sp2' is already loaded and 'sp2_cnts' is computed\nsp2_cnts = ds_sp2['sp2_cnts'].compute()\n\n# Convert 'time' to a regular NumPy array of datetime objects for compatibility\ntimes = ds_sp2['time'].values\nbins = ds_sp2['bin'].values\n\n# Filter bins and sp2_cnts for bins <= 0.6 micrometers\nmask = bins <= 0.5\nfiltered_bins = bins[mask]\nfiltered_sp2_cnts = sp2_cnts[:, mask]\n\n# Create the plot\nfig, ax = plt.subplots(figsize=(15, 7))\n# Use meshgrid to create 2D grid coordinates for times and filtered bins, necessary for pcolormesh\nT, B = np.meshgrid(times, filtered_bins)\n# Plot with specified color scale range\nc = ax.pcolormesh(T, B, filtered_sp2_cnts.T, shading='auto', vmin=0, vmax=40)  # Set color scale limits here\n\n# Adding a colorbar to represent the concentration scales\ncbar = plt.colorbar(c, ax=ax)\ncbar.set_label('SP2 Counts')\n\n# Customization of the plot\nax.set_title('SP2 Counts Over Time by Size Bin from April 3-7, 2022')\nax.set_xlabel('Time')\nax.set_ylabel('Size Bin (Î¼m)')\n\n# Format x-axis to handle datetime objects nicely\nplt.gcf().autofmt_xdate()  # Auto format date labels\n\nplt.show()","key":"rgfYeBb3qg"},{"type":"output","id":"-7HV0bnhT4FEjEA6YS6Uk","data":[],"key":"SKWOiqSMuG"}],"key":"mKY7Ukdulw"}],"key":"DefwhyhANC"},"references":{"cite":{"order":[],"data":{}}},"footer":{"navigation":{"prev":{"title":"Size dsitributions from SMPS distributions","url":"/smps","group":"Analyze associated environmental conditions"},"next":{"title":"Plot downward longwave (LW) radiation at surface for WRF Simulations","url":"/notebooks/wrf-plot-longwave-rad","group":"Longwave radiation variations"}}},"domain":"http://localhost:3000"}